# Only thing to keep in mind as long as your mid is greater than the right pointer your minimum values lies on its right.

class Solution:
    def findMin(self, nums: List[int]) -> int:
        left, right = 0, len(nums)-1
        if len(nums) == 1: return nums[0]
        while left < right:
            mid = (left + right)//2
            if nums[mid]> nums[right]: left = mid + 1
            else: right = mid
            
        return nums[left]
