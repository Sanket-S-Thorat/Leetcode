#Count number of zeros in the list :
# a. If count greater than 1 then return a list of zeros of len == len(nums).
# b. If count == 1 then return a list with all elements as zero except the one which is zero, replace that with product of list excluding zero.
# c. If count is 0 then, return product of list divided by that element and replace with it.

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        prod, count = nums[0], 0
        for i in range(1,len(nums)):
            if nums[i] != 0: prod *= nums[i]
            else: count += 1
        
        if count > 1: nums = [0 for i in nums]
        elif count == 1: nums = [prod if (i == 0) else 0 for i in nums]
        else:nums = [prod//i for i in nums]
            
        return nums
